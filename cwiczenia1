CREATE DATABASE s298267;
CREATE SCHEMA firma;
CREATE ROLE ksiegowosc;
GRANT SELECT ON ALL TABLES IN SCHEMA firma TO ksiegowosc;

CREATE TABLE PRACOWNICY (id_pracownika SERIAL NOT NULL, imie VARCHAR(30) NOT NULL, nazwisko VARCHAR(30) NOT NULL, adres VARCHAR(30) NOT NULL, telefon VARCHAR(30) NOT NULL);
CREATE TABLE godziny (id_godziny SERIAL NOT NULL, data DATE NOT NULL, liczba_godzin INT NOT NULL, id_pracownika INT NOT NULL);
CREATE TABLE pensja_stanowisko (id_pensji SERIAL NOT NULL, stanowisko VARCHAR(100) NOT NULL, kwota FLOAT(2) NOT NULL);
CREATE TABLE premia(id_premii SERIAL NOT NULL, rodzaj VARCHAR(100) NOT NULL, kwota FLOAT(2) NOT NULL);
CREATE TABLE wynagrodzenie(id_wynagrodzenia SERIAL NOT NULL, data DATE NOT NULL, id_pracownika INT NOT NULL, id_godziny INT NOT NULL, id_pensji INT NOT NULL, id_premii INT NOT NULL);

# klucze glowne
ALTER TABLE pracownicy ADD PRIMARY KEY (id_pracownika);
ALTER TABLE godziny ADD PRIMARY KEY (id_godziny);
ALTER TABLE pensja_stanowisko ADD PRIMARY KEY (id_pensji);
ALTER TABLE premia ADD PRIMARY KEY (id_premii);
ALTER TABLE wynagrodzenie ADD PRIMARY KEY (id_wynagrodzenia);

# klucze obce
ALTER TABLE godziny ADD FOREIGN KEY (id_pracownika) REFERENCES pracownicy(id_pracownika);
ALTER TABLE wynagrodzenie ADD FOREIGN KEY (id_pracownika) REFERENCES pracownicy(id_pracownika);
ALTER TABLE wynagrodzenie ADD FOREIGN KEY (id_godziny) REFERENCES godziny(id_godziny);
ALTER TABLE wynagrodzenie ADD FOREIGN KEY (id_pensji) REFERENCES pensja_stanowisko(id_pensji);
ALTER TABLE wynagrodzenie ADD FOREIGN KEY (id_premii) REFERENCES premia(id_premii);

# indexy 
CREATE INDEX pensja_stanowisko_index ON pensja_stanowisko(kwota);
CREATE INDEX premia_kwota_index ON premia(kwota);

# komentarze
COMMENT ON TABLE pracownicy IS 'Tabela pracownicy';
COMMENT ON TABLE godziny IS 'Tabela godziny';
COMMENT ON TABLE pensja_stanowisko IS 'Tabela pensja_stanowisko';
COMMENT ON TABLE premia IS 'Tabela premia';
COMMENT ON TABLE wynagrodzenie IS 'Tabela wynagrodzenie';

# wiezy integralnosci
ALTER TABLE pracownicy DISABLE TRIGGER ALL;
ALTER TABLE godziny DISABLE TRIGGER ALL;
ALTER TABLE wynagrodzenie DISABLE TRIGGER ALL;
ALTER TABLE pensja_stanowisko DISABLE TRIGGER ALL;
ALTER TABLE premia DISABLE TRIGGER ALL;

# zad 6
ALTER TABLE godziny ADD COLUMN miesiac DATE NOT NULL;
ALTER TABLE godziny ADD COLUMN numer_tygodnia DATE NOT NULL;
ALTER TABLE wynagrodzenie ALTER COLUMN data TYPE TEXT;
UPDATE premia SET kwota = 0 WHERE rodzaj is NULL;

# usuwam te pola typu data i wrzucam inty
ALTER TABLE godziny DROP COLUMN numer_tygodnia;
ALTER TABLE godziny DROP COLUMN miesiac;

ALTER TABLE godziny ADD COLUMN numer_tygodnia INT NOT NULL;
ALTER TABLE godziny ADD COLUMN miesiac INT NOT NULL;


# wypelnianie
INSERT INTO pracownicy VALUES (1, 'Jan', 'Kowalski', 'Kobierzynska 3', '555555555');
INSERT INTO pracownicy (imie, nazwisko, adres, telefon) VALUES ('Janek', 'Kowalski', 'Rynek 5', '555666777');
INSERT INTO pracownicy (imie, nazwisko, adres, telefon) VALUES ('Wieslaw', 'Paleta', 'Warszawa 10', '999666777');
INSERT INTO pracownicy (imie, nazwisko, adres, telefon) VALUES ('Janina', 'Paleta', 'Debica', '666666666');
INSERT INTO pracownicy (imie, nazwisko, adres, telefon) VALUES ('Olga', 'Koza', 'Morawica', '123456789');
INSERT INTO pracownicy (imie, nazwisko, adres, telefon) VALUES ('Helga', 'Abecd', 'Berlin', '862456129');
INSERT INTO pracownicy (imie, nazwisko, adres, telefon) VALUES ('Dzony', 'Kojony', 'Krakow', '321123321');
INSERT INTO pracownicy (imie, nazwisko, adres, telefon) VALUES ('Shrek', 'Kojony', 'Krakow', '321888999');
INSERT INTO pracownicy (imie, nazwisko, adres, telefon) VALUES ('Inlander', 'Czeski', 'Krakow', '512387193');
INSERT INTO pracownicy (imie, nazwisko, adres, telefon) VALUES ('Koza', 'Woza', 'Debica', '393493193');

INSERT INTO premia (rodzaj, kwota) VALUES ('premia1', 20.5);
INSERT INTO premia (rodzaj, kwota) VALUES ('premia2', 500);
INSERT INTO premia (rodzaj, kwota) VALUES ('premia3', 130);
INSERT INTO premia (rodzaj, kwota) VALUES ('brak', 0);
INSERT INTO premia (rodzaj, kwota) VALUES ('premia4', 150);
INSERT INTO premia (rodzaj, kwota) VALUES ('premia5', 350);
INSERT INTO premia (rodzaj, kwota) VALUES ('premia6', 950);
INSERT INTO premia (rodzaj, kwota) VALUES ('premia7', 15000);
INSERT INTO premia (rodzaj, kwota) VALUES ('premia8', 3500);
INSERT INTO premia (rodzaj, kwota) VALUES ('premia9', 700);

INSERT INTO pensja_stanowisko (stanowisko,  kwota) VALUES ('murarz', 2400);
INSERT INTO pensja_stanowisko (stanowisko,  kwota) VALUES ('tynkarz', 2000);
INSERT INTO pensja_stanowisko (stanowisko,  kwota) VALUES ('akrobata', 9000);
INSERT INTO pensja_stanowisko (stanowisko,  kwota) VALUES ('mechanik', 3000);
INSERT INTO pensja_stanowisko (stanowisko,  kwota) VALUES ('sprzedawca', 2500);
INSERT INTO pensja_stanowisko (stanowisko,  kwota) VALUES ('grzybiarz', 300);
INSERT INTO pensja_stanowisko (stanowisko,  kwota) VALUES ('500plusior', 500);
INSERT INTO pensja_stanowisko (stanowisko,  kwota) VALUES ('programista15k', 15000);
INSERT INTO pensja_stanowisko (stanowisko,  kwota) VALUES ('barman', 3500);
INSERT INTO pensja_stanowisko (stanowisko,  kwota) VALUES ('rolnik', 1000);

INSERT INTO godziny (liczba_godzin, id_pracownika, miesiac, numer_tygodnia, data) VALUES (40, 1, 1, 1, '2020-01-01');
INSERT INTO godziny (liczba_godzin, id_pracownika, miesiac, numer_tygodnia, data) VALUES (35, 2, 1, 1, '2020-01-01');
INSERT INTO godziny (liczba_godzin, id_pracownika, miesiac, numer_tygodnia, data) VALUES (40, 3, 1, 1, '2020-01-01');
INSERT INTO godziny (liczba_godzin, id_pracownika, miesiac, numer_tygodnia, data) VALUES (40, 4, 1, 1, '2020-01-01');
INSERT INTO godziny (liczba_godzin, id_pracownika, miesiac, numer_tygodnia, data) VALUES (40, 5, 1, 1, '2020-01-01');
INSERT INTO godziny (liczba_godzin, id_pracownika, miesiac, numer_tygodnia, data) VALUES (60, 6, 1, 1, '2020-01-01');
INSERT INTO godziny (liczba_godzin, id_pracownika, miesiac, numer_tygodnia, data) VALUES (70, 7, 1, 1, '2020-01-01');
INSERT INTO godziny (liczba_godzin, id_pracownika, miesiac, numer_tygodnia, data) VALUES (20, 8, 1, 1, '2020-01-01');
INSERT INTO godziny (liczba_godzin, id_pracownika, miesiac, numer_tygodnia, data) VALUES (10, 9, 1, 1, '2020-01-01');
INSERT INTO godziny (liczba_godzin, id_pracownika, miesiac, numer_tygodnia, data) VALUES (10, 10, 1, 1, '2020-01-01');

INSERT INTO wynagrodzenie (data, id_pracownika, id_godziny, id_pensji, id_premii) VALUES ('2020-01-01', 1, 1, 1, 1);
INSERT INTO wynagrodzenie (data, id_pracownika, id_godziny, id_pensji, id_premii) VALUES ('2020-01-01', 2, 2, 2, 2);
INSERT INTO wynagrodzenie (data, id_pracownika, id_godziny, id_pensji, id_premii) VALUES ('2020-01-01', 3, 3, 3, 3);
INSERT INTO wynagrodzenie (data, id_pracownika, id_godziny, id_pensji, id_premii) VALUES ('2020-01-01', 4, 4, 4, 5);
INSERT INTO wynagrodzenie (data, id_pracownika, id_godziny, id_pensji, id_premii) VALUES ('2020-01-01', 5, 5, 5, 5);
INSERT INTO wynagrodzenie (data, id_pracownika, id_godziny, id_pensji, id_premii) VALUES ('2020-01-01', 6, 6, 6, 6);
INSERT INTO wynagrodzenie (data, id_pracownika, id_godziny, id_pensji, id_premii) VALUES ('2020-01-01', 7, 7, 7, 7);
INSERT INTO wynagrodzenie (data, id_pracownika, id_godziny, id_pensji, id_premii) VALUES ('2020-01-01', 8, 8, 8, 9);
INSERT INTO wynagrodzenie (data, id_pracownika, id_godziny, id_pensji, id_premii) VALUES ('2020-01-01', 9, 9, 9, 9);
INSERT INTO wynagrodzenie (data, id_pracownika, id_godziny, id_pensji, id_premii) VALUES ('2020-01-01', 10, 10, 10, 10);


# zad 6
SELECT id_pracownika, nazwisko FROM pracownicy;
SELECT pracownicy.id_pracownika FROM pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji WHERE kwota > 1000;
SELECT pracownicy.id_pracownika FROM pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji JOIN premia ON wynagrodzenie.id_premii = premia.id_premii WHERE pensja_stanowisko.kwota > 2000 AND premia.rodzaj = 'brak';
SELECT * FROM pracownicy WHERE imie LIKE 'J%';
SELECT * FROM pracownicy WHERE nazwisko LIKE '%n%' AND imie LIKE '%a';
SELECT imie,nazwisko, liczba_godzin-160 FROM pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN godziny ON wynagrodzenie.id_godziny = godziny.id_godziny WHERE liczba_godzin > 160;
SELECT imie, nazwisko FROM pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji WHERE kwota >= 1500 AND kwota <= 3000;
SELECT imie, nazwisko FROM pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN godziny ON wynagrodzenie.id_godziny = godziny.id_godziny JOIN premia ON wynagrodzenie.id_premii = premia.id_premii WHERE liczba_godzin > 160 AND premia.rodzaj LIKE 'brak';

# zad 7
SELECT imie, nazwisko, kwota FROM pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji ORDER BY kwota;
SELECT imie, nazwisko, pensja_stanowisko.kwota, premia.kwota FROM pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji JOIN premia ON wynagrodzenie.id_premii = premia.id_premii ORDER BY pensja_stanowisko.kwota ASC, premia.kwota DESC;
SELECT stanowisko, COUNT(pracownicy.id_pracownika) FROM pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji GROUP BY stanowisko;
SELECT AVG(kwota), MIN(kwota), MAX(kwota) FROM pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji WHERE stanowisko LIKE 'programista15k';
SELECT SUM(kwota) FROM pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji;
SELECT stanowisko, SUM(kwota) FROM pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji GROUP BY stanowisko;
SELECT stanowisko, SUM(premia.kwota) FROM pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji JOIN premia ON wynagrodzenie.id_premii = premia.id_premii GROUP BY (stanowisko);
DELETE FROM pracownicy WHERE pracownicy.id_pracownika IN (SELECT pracownicy.id_pracownika FROM pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji WHERE pensja_stanowisko.kwota < 1200);

# zad 8
UPDATE pracownicy SET telefon = CONCAT('(+48)', telefon);
UPDATE pracownicy SET telefon = CONCAT(LEFT(telefon, 8), '-', SUBSTRING(telefon, 9, 3), '-', SUBSTRING(telefon, 11, 3));
SELECT UPPER(nazwisko) FROM pracownicy ORDER BY LENGTH(nazwisko) DESC LIMIT 1;                                                              ^
SELECT MD5(CONCAT(imie, nazwisko, adres, telefon, kwota)) from pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji;

# zad 9
SELECT CONCAT('Pracownik ', imie, ' ', nazwisko, ', w dniu ', godziny.data, ' otrzymal pensje calkowita na kwote ', (pensja_stanowisko.kwota + premia.kwota), ', gdzie wynagrodzenie zasadnicze wynosilo: ', pensja_stanowisko.kwota, ', premia:', premia.kwota, ', nadgodziny: ', (CASE WHEN godziny.liczba_godzin > 160 THEN 0 ELSE (160 - godziny.liczba_godzin) END)) FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN godziny ON godziny.id_godziny = wynagrodzenie.id_godziny JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji JOIN premia ON premia.id_premii = wynagrodzenie.id_premii;




