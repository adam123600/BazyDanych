-- Created by Vertabelo (http://vertabelo.com)
-- Last modification date: 2020-10-11 15:05:14.105

-- tables
-- Table: godziny
CREATE TABLE firma.godziny (
    id_godziny int  NOT NULL,
    data date  NOT NULL,
    liczba_godzin int  NOT NULL,
    id_pracownika int  NOT NULL,
    pracownicy_id_pracownika int  NOT NULL,
    CONSTRAINT godziny_pk PRIMARY KEY (id_godziny)
);

-- Table: pensja_stanowisko
CREATE TABLE firma.pensja_stanowisko (
    id_pensji int  NOT NULL,
    stanowisko varchar(50)  NOT NULL,
    kwota money  NOT NULL,
    CONSTRAINT pensja_stanowisko_pk PRIMARY KEY (id_pensji)
);

-- Table: pracownicy
CREATE TABLE firma.pracownicy (
    id_pracownika int  NOT NULL,
    imie varchar(50)  NOT NULL,
    nazwisko varchar(50)  NOT NULL,
    adres varchar(50)  NOT NULL,
    telefon varchar(50)  NOT NULL,
    CONSTRAINT pracownicy_pk PRIMARY KEY (id_pracownika)
);

-- Table: premia
CREATE TABLE firma.premia (
    id_premii int  NOT NULL,
    rodzaj varchar(50)  NOT NULL,
    kwota money  NOT NULL,
    CONSTRAINT premia_pk PRIMARY KEY (id_premii)
);

-- Table: producenci
CREATE TABLE sklep.producenci (
    id_producenta int  NOT NULL,
    nazwa_producenta varchar(50)  NOT NULL,
    mail varchar(50)  NOT NULL,
    telefon varchar(50)  NOT NULL,
    CONSTRAINT producenci_pk PRIMARY KEY (id_producenta)
);

-- Table: produkty
CREATE TABLE sklep.produkty (
    id_produktu int  NOT NULL,
    nazwa_produktu varchar(50)  NOT NULL,
    cena money  NOT NULL,
    producenci_id_producenta int  NOT NULL,
    CONSTRAINT produkty_pk PRIMARY KEY (id_produktu)
);

-- Table: wynagrodzenie
CREATE TABLE firma.wynagrodzenie (
    id_wynagrodzenia int  NOT NULL,
    data date  NOT NULL,
    id_pracownika int  NOT NULL,
    id_godziny int  NOT NULL,
    id_pensji int  NOT NULL,
    id_premii int  NOT NULL,
    pracownicy_id_pracownika int  NOT NULL,
    pensja_stanowisko_id_pensji int  NOT NULL,
    premia_id_premii int  NOT NULL,
    godziny_id_godziny int  NOT NULL,
    CONSTRAINT wynagrodzenie_pk PRIMARY KEY (id_wynagrodzenia)
);

-- Table: zamowienia
CREATE TABLE sklep.zamowienia (
    id_zamowienia int  NOT NULL,
    ilosc int  NOT NULL,
    data date  NOT NULL,
    produkty_id_produktu int  NOT NULL,
    CONSTRAINT zamowienia_pk PRIMARY KEY (id_zamowienia)
);

-- foreign keys
-- Reference: godziny_pracownicy (table: godziny)
ALTER TABLE firma.godziny ADD CONSTRAINT godziny_pracownicy
    FOREIGN KEY (pracownicy_id_pracownika)
    REFERENCES firma.pracownicy (id_pracownika)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: produkty_producenci (table: produkty)
ALTER TABLE sklep.produkty ADD CONSTRAINT produkty_producenci
    FOREIGN KEY (producenci_id_producenta)
    REFERENCES sklep.producenci (id_producenta)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: wynagrodzenie_godziny (table: wynagrodzenie)
ALTER TABLE firma.wynagrodzenie ADD CONSTRAINT wynagrodzenie_godziny
    FOREIGN KEY (godziny_id_godziny)
    REFERENCES firma.godziny (id_godziny)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: wynagrodzenie_pensja_stanowisko (table: wynagrodzenie)
ALTER TABLE firma.wynagrodzenie ADD CONSTRAINT wynagrodzenie_pensja_stanowisko
    FOREIGN KEY (pensja_stanowisko_id_pensji)
    REFERENCES firma.pensja_stanowisko (id_pensji)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: wynagrodzenie_pracownicy (table: wynagrodzenie)
ALTER TABLE firma.wynagrodzenie ADD CONSTRAINT wynagrodzenie_pracownicy
    FOREIGN KEY (pracownicy_id_pracownika)
    REFERENCES firma.pracownicy (id_pracownika)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: wynagrodzenie_premia (table: wynagrodzenie)
ALTER TABLE firma.wynagrodzenie ADD CONSTRAINT wynagrodzenie_premia
    FOREIGN KEY (premia_id_premii)
    REFERENCES firma.premia (id_premii)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: zamowienia_produkty (table: zamowienia)
ALTER TABLE sklep.zamowienia ADD CONSTRAINT zamowienia_produkty
    FOREIGN KEY (produkty_id_produktu)
    REFERENCES sklep.produkty (id_produktu)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- End of file.

CREATE DATABASE s298267_cw2;
\c s298267_c2;
CREATE SCHEMA firma;
CREATE SCHEMA sklep;

\i '{nazwa skryptu w ktorym znajdowalo sie to co wyzej - wygenerowane z vertabelo}'


INSERT INTO sklep.producenci(id_producenta,nazwa_producenta,mail,telefon) VALUES(1,'prod_1','prod1@gmail.com','111-111-111');
INSERT INTO sklep.producenci(id_producenta,nazwa_producenta,mail,telefon) VALUES(2,'prod_2','prod2@gmail.com','222-222-222');
INSERT INTO sklep.producenci(id_producenta,nazwa_producenta,mail,telefon) VALUES(3,'prod_3','prod3@gmail.com','333-333-333');
INSERT INTO sklep.producenci(id_producenta,nazwa_producenta,mail,telefon) VALUES(4,'prod_4','prod4@gmail.com','444-444-444');
INSERT INTO sklep.producenci(id_producenta,nazwa_producenta,mail,telefon) VALUES(5,'prod_5','prod5@gmail.com','555-555-555');
INSERT INTO sklep.producenci(id_producenta,nazwa_producenta,mail,telefon) VALUES(6,'prod_6','prod6@gmail.com','666-666-666');
INSERT INTO sklep.producenci(id_producenta,nazwa_producenta,mail,telefon) VALUES(7,'prod_7','prod7@gmail.com','777-777-777');
INSERT INTO sklep.producenci(id_producenta,nazwa_producenta,mail,telefon) VALUES(8,'prod_8','prod8@gmail.com','888-888-888');
INSERT INTO sklep.producenci(id_producenta,nazwa_producenta,mail,telefon) VALUES(9,'prod_9','prod9@gmail.com','999-999-999');
INSERT INTO sklep.producenci(id_producenta,nazwa_producenta,mail,telefon) VALUES(10,'prod_10','prod10@gmail.com','123-321-123');


INSERT INTO sklep.produkty(id_produktu,nazwa_produktu,cena,producenci_id_producenta) VALUES(1,'prod_1',111,1);
INSERT INTO sklep.produkty(id_produktu,nazwa_produktu,cena,producenci_id_producenta) VALUES(2,'prod_2',222,2);
INSERT INTO sklep.produkty(id_produktu,nazwa_produktu,cena,producenci_id_producenta) VALUES(3,'prod_3',333,3);
INSERT INTO sklep.produkty(id_produktu,nazwa_produktu,cena,producenci_id_producenta) VALUES(4,'prod_4',444,4);
INSERT INTO sklep.produkty(id_produktu,nazwa_produktu,cena,producenci_id_producenta) VALUES(5,'prod_5',555,5);
INSERT INTO sklep.produkty(id_produktu,nazwa_produktu,cena,producenci_id_producenta) VALUES(6,'prod_6',666,6);
INSERT INTO sklep.produkty(id_produktu,nazwa_produktu,cena,producenci_id_producenta) VALUES(7,'prod_7',777,7);
INSERT INTO sklep.produkty(id_produktu,nazwa_produktu,cena,producenci_id_producenta) VALUES(8,'prod_8',888,8);
INSERT INTO sklep.produkty(id_produktu,nazwa_produktu,cena,producenci_id_producenta) VALUES(9,'prod_9',999,9);
INSERT INTO sklep.produkty(id_produktu,nazwa_produktu,cena,producenci_id_producenta) VALUES(10,'prod_10',1000,10);


INSERT INTO sklep.zamowienia(id_zamowienia,ilosc,data,produkty_id_produktu) VALUES(1,10,'2020-01-01',1);
INSERT INTO sklep.zamowienia(id_zamowienia,ilosc,data,produkty_id_produktu) VALUES(2,20,'2020-02-01',2);
INSERT INTO sklep.zamowienia(id_zamowienia,ilosc,data,produkty_id_produktu) VALUES(3,30,'2020-03-01',3);
INSERT INTO sklep.zamowienia(id_zamowienia,ilosc,data,produkty_id_produktu) VALUES(4,40,'2020-04-01',4);
INSERT INTO sklep.zamowienia(id_zamowienia,ilosc,data,produkty_id_produktu) VALUES(5,50,'2020-05-01',5);
INSERT INTO sklep.zamowienia(id_zamowienia,ilosc,data,produkty_id_produktu) VALUES(6,60,'2020-06-01',6);
INSERT INTO sklep.zamowienia(id_zamowienia,ilosc,data,produkty_id_produktu) VALUES(7,70,'2020-07-01',7);
INSERT INTO sklep.zamowienia(id_zamowienia,ilosc,data,produkty_id_produktu) VALUES(8,80,'2020-08-01',8);
INSERT INTO sklep.zamowienia(id_zamowienia,ilosc,data,produkty_id_produktu) VALUES(9,90,'2020-09-01',9);
INSERT INTO sklep.zamowienia(id_zamowienia,ilosc,data,produkty_id_produktu) VALUES(10,100,'2020-10-01',10);

# 7, 8, 9: kopia wykonana za pomca pgAdmin
# db przywrocona


SELECT CONCAT('Producent: ', nazwa_producenta, ', liczba zamowien: ', SUM(ilosc), ', wartosc zamowienia: ', SUM(ilosc*cena)) FROM sklep.zamowienia RIGHT JOIN sklep.produkty ON sklep.produkty.id_produktu = sklep.zamowienia.produkty_id_produktu RIGHT JOIN sklep.producenci ON sklep.producenci.id_producenta = sklep.produkty.producenci_id_producenta GROUP BY sklep.producenci.id_producenta;
SELECT CONCAT('Produkt: ', nazwa_produktu, ', liczba zamowien: ', COUNT(id_zamowienia)) FROM sklep.produkty JOIN sklep.zamowienia ON sklep.produkty.id_produktu = sklep.zamowienia.produkty_id_produktu GROUP BY sklep.produkty.nazwa_produktu;
SELECT * FROM sklep.produkty NATURAL JOIN sklep.zamowienia;
SELECT * FROM sklep.zamowienia WHERE DATE_PART('month', data) = 1;
SELECT SUM(ilosc*cena) AS sprzedaz, DATE_PART('dow', data) AS dzien_tygodnia FROM sklep.zamowienia JOIN sklep.produkty ON id_produktu = produkty_id_produktu GROUP BY dzien_tygodnia ORDER BY sprzedaz DESC;
SELECT nazwa_produktu, COUNT(id_zamowienia) AS ilosc_zamowien FROM sklep.zamowienia JOIN sklep.produkty ON id_produktu = produkty_id_produktu GROUP BY nazwa_produktu ORDER BY ilosc_zamowien DESC;


SELECT CONCAT('Produkt ', UPPER(nazwa_produktu), ' którego producentem jest ', LOWER(nazwa_producenta), ', zamówiono ', COUNT(ilosc), ' razy') AS opis FROM sklep.produkty JOIN sklep.producenci ON id_producenta = producenci_id_producenta JOIN sklep.zamowienia ON id_produktu = produkty_id_produktu GROUP BY nazwa_produktu, nazwa_producenta ORDER BY COUNT(ilosc) DESC;
SELECT * FROM sklep.zamowienia JOIN sklep.produkty ON id_produktu = produkty_id_produktu ORDER BY (cena * ilosc ) DESC LIMIT ( SELECT COUNT(*) FROM sklep.zamowienia ) - 3;
CREATE TABLE klienci (id_klienta SERIAL PRIMARY KEY, mail VARCHAR(50) NOT NULL, telefon VARCHAR(50) NOT NULL);
ALTER TABLE sklep.zamowienia ADD COLUMN klienci_id_klienta INT REFERENCES klienci(id_klienta);
INSERT INTO klienci(email,numer_telefonu) VALUES('klient1','111-222-333');

INSERT INTO klienci(mail,telefon) VALUES('klient1','111-111-111');
INSERT INTO klienci(mail,telefon) VALUES('klient2','222-222-222');
INSERT INTO klienci(mail,telefon) VALUES('klient3','333-333-333');
INSERT INTO klienci(mail,telefon) VALUES('klient4','444-444-444');
INSERT INTO klienci(mail,telefon) VALUES('klient5','555-555-555');
INSERT INTO klienci(mail,telefon) VALUES('klient6','666-666-666');
INSERT INTO klienci(mail,telefon) VALUES('klient7','777-777-777');
INSERT INTO klienci(mail,telefon) VALUES('klient8','888-888-888');
INSERT INTO klienci(mail,telefon) VALUES('klient9','999-999-999');
INSERT INTO klienci(mail,telefon) VALUES('klient10','123-456-789');

UPDATE sklep.zamowienia SET klienci_id_klienta = 1 WHERE id_zamowienia = 1;
UPDATE sklep.zamowienia SET klienci_id_klienta = 2 WHERE id_zamowienia = 2;
UPDATE sklep.zamowienia SET klienci_id_klienta = 3 WHERE id_zamowienia = 3;
UPDATE sklep.zamowienia SET klienci_id_klienta = 4 WHERE id_zamowienia = 4;
UPDATE sklep.zamowienia SET klienci_id_klienta = 5 WHERE id_zamowienia = 5;
UPDATE sklep.zamowienia SET klienci_id_klienta = 6 WHERE id_zamowienia = 6;
UPDATE sklep.zamowienia SET klienci_id_klienta = 7 WHERE id_zamowienia = 7;
UPDATE sklep.zamowienia SET klienci_id_klienta = 8 WHERE id_zamowienia = 8;
UPDATE sklep.zamowienia SET klienci_id_klienta = 9 WHERE id_zamowienia = 9;
UPDATE sklep.zamowienia SET klienci_id_klienta = 10 WHERE id_zamowienia = 10;

SELECT klienci.*, nazwa_produktu, ilosc, SUM(cena*ilosc) AS wartosc_zamowienia FROM klienci JOIN sklep.zamowienia ON id_klienta = klienci_id_klienta JOIN sklep.produkty ON produkty_id_produktu = id_produktu GROUP BY id_klienta, nazwa_produktu, ilosc;
SELECT CONCAT('NAJCZESCIEJ ZAMAWIAJACY: ', id_klienta, ', ilosc zamowien: ', COUNT(id_zamowienia), ', wartosc: ', SUM(ilosc*cena)) FROM sklep.zamowienia JOIN klienci ON id_klienta = klienci_id_klienta JOIN sklep.produkty ON produkty_id_produktu = id_produktu GROUP BY id_klienta ORDER BY COUNT(id_zamowienia) DESC LIMIT 1;
DELETE FROM sklep.produkty WHERE id_produktu IN (SELECT produkty_id_produktu FROM sklep.zamowienia RIGHT JOIN sklep.produkty ON id_produktu = produkty_id_produktu GROUP BY produkty_id_produktu HAVING COUNT(id_zamowienia) = 0);

CREATE TABLE numer (liczba INT CHECK(liczba BETWEEN 0 AND 9999));
CREATE SEQUENCE liczba_seq START WITH 100 INCREMENT BY 5 MINVALUE 0 MAXVALUE 125 CYCLE;
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
INSERT INTO numer VALUES(nextval('liczba_seq'));
ALTER SEQUENCE liczba_seq INCREMENT BY 6;
SELECT nextval('liczba_seq');
SELECT nextval('liczba_seq');
DROP SEQUENCE liczba_seq;


\du
CREATE USER Superuser298267 SUPERUSER;
CREATE USER guest298267;
GRANT SELECT ON ALL TABLES IN SCHEMA firma TO guest298267;
GRANT SELECT ON ALL TABLES IN SCHEMA sklep TO guest298267;
\du
ALTER USER Superuser298267 RENAME TO student;
ALTER USER student WITH NOSUPERUSER;
GRANT SELECT ON ALL TABLES IN SCHEMA firma TO student;
GRANT SELECT ON ALL TABLES IN SCHEMA sklep TO student;
DROP OWNED BY guest298267;
DROP USER guest298267;

BEGIN;
UPDATE sklep.produkty SET cena = cena + CAST(10 AS money);
COMMIT;

BEGIN;
UPDATE sklep.produkty SET cena = 1.1*cena WHERE id_produktu = 3;
SAVEPOINT S1;
UPDATE sklep.zamowienia SET ilosc = 1.25 * ilosc;
SAVEPOINT S2;
DELETE FROM klienci WHERE id_klienta IN (SELECT id_klienta FROM klienci JOIN sklep.zamowienia ON id_klienta = klienci_id_klienta JOIN sklep.produkty ON id_produktu = produkty_id_produktu GROUP BY id_klienta ORDER BY SUM(cena*ilosc) DESC LIMIT 1);
ROLLBACK TO S1;
ROLLBACK TO S2;
ROLLBACK;
COMMIT;

CREATE OR REPLACE FUNCTION udzial()
RETURNS TABLE (procent text) AS
$func$
BEGIN
	RETURN QUERY
	SELECT CONCAT(nazwa_producenta, ': ', (COUNT(id_zamowienia) / CAST((SELECT COUNT(*) FROM sklep.zamowienia) AS FLOAT))*100, '%') FROM sklep.producenci JOIN sklep.produkty ON id_producenta = producenci_id_producenta JOIN sklep.zamowienia ON id_produktu = produkty_id_produktu GROUP BY (id_producenta);
END
$func$ LANGUAGE plpgsql;
